{"ast":null,"code":"import memoize from 'memoize-one';\nimport es from './lang/es';\nexport var translations = {\n  es: es\n};\nexport var getTranslation = memoize(function (language) {\n  return function (message) {\n    return translations[language ? language : 'es'][message];\n  };\n});","map":{"version":3,"sources":["/Users/alvaroalmonacidrojo/Personal/Alvaro/Repos/proyecto-fin-gs/website/src/util/translations/index.ts"],"names":["memoize","es","translations","getTranslation","language","message"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,aAApB;AAEA,OAAOC,EAAP,MAAe,WAAf;AAOA,OAAO,IAAMC,YAA2C,GAAG;AACzDD,EAAAA,EAAE,EAAFA;AADyD,CAApD;AAIP,OAAO,IAAME,cAAc,GAAGH,OAAO,CACnC,UAACI,QAAD;AAAA,SAAoC,UAACC,OAAD,EAA6B;AAC/D,WAAOH,YAAY,CAACE,QAAQ,GAAGA,QAAH,GAAc,IAAvB,CAAZ,CAAyCC,OAAzC,CAAP;AACD,GAFD;AAAA,CADmC,CAA9B","sourcesContent":["import memoize from 'memoize-one';\n\nimport es from './lang/es';\nimport { Translation } from './types';\n\nexport type Language = 'es';\n\nexport type TranslationKey = keyof Translation;\n\nexport const translations: Record<Language, Translation> = {\n  es,\n};\n\nexport const getTranslation = memoize(\n  (language: Language | undefined) => (message: TranslationKey) => {\n    return translations[language ? language : 'es'][message];\n  },\n);\n"]},"metadata":{},"sourceType":"module"}