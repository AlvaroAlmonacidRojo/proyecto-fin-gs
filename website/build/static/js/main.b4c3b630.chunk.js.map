{"version":3,"sources":["util/translations/index.ts","util/translations/lang/es.ts","components/Translation/context.tsx","components/Translation/index.tsx","components/ListItemLink/index.tsx","components/Icon/index.tsx","components/ListTab/index.tsx","components/ThemeProvider/index.tsx","components/SideBar/index.tsx","containers/SideBar/index.tsx","pages/DashboardLayout/index.tsx","util/fetch.ts","redux/reducers/dataState/index.ts","redux/reducers/fingerprintDetails/index.ts","components/DataContainer/index.tsx","components/DatePicker/index.tsx","components/Typography/index.tsx","components/Home/mockList.ts","components/Home/index.tsx","redux/actionDispatcher.ts","containers/Home/index.tsx","pages/Page/index.tsx","pages/HomePage/index.tsx","redux/reducers/userList/index.ts","components/Button/index.tsx","components/Forms/index.tsx","components/Proyects/index.tsx","redux/reducers/proyectList/index.ts","containers/Proyects/index.tsx","pages/ProyectsPage/index.tsx","components/Users/index.tsx","containers/Users/index.tsx","pages/UsersPage/index.tsx","AppRoutes.tsx","redux/reducers/login/index.ts","components/Login/index.tsx","redux/reducers/currentPageMeta/index.ts","redux/reducers/page/index.ts","redux/reducer.ts","redux/state.ts","redux/configureStore.ts","App.tsx","index.tsx"],"names":["translations","es","getTranslation","memoize","language","message","LanguageContext","createContext","Translate","Consumer","ListItemLink","props","component","Link","iconToComponentMap","account","AccountCircleIcon","addcircle","AddCircle","assignment","Assignment","assigmentLate","AssignmentLateIcon","barChart","BarChartIcon","beachAccess","BeachAccess","cached","Cached","calendar","Calendar","callMerge","CallMergeIcon","chat","ChatIcon","check","Check","chevronLeft","ChevronLeftIcon","chevronRight","ChevronRightIcon","clear","Clear","close","Close","cloudOff","CloudOff","compareArrows","CompareArrowsIcon","customer","CustomerIcon","customers","CustomersIcon","dashboard","DashboardIcon","description","Description","done","Done","edit","Edit","error","ErrorIcon","errorOutline","ErrorOutlineIcon","expandLess","ExpandLessIcon","expandMore","ExpandMoreIcon","failure","CancelIcon","failureOutline","CancelOutlineIcon","fileCopy","FileCopyOutlinedIcon","folderOpen","FolderOpen","gavel","GavelIcon","getApp","GetApp","group","Group","home","Home","importContacts","ImportContacts","info","InfoIcon","keyboardArrowDownIcon","KeyboardArrowDownIcon","launch","LaunchIcon","lock","LockIcon","lockOpen","LockOpen","loop","Loop","moneySent","CallMadeIcon","more","MoreHorizontalIcon","notificationImportant","NotificationImportant","notInterested","NotInterested","personOutline","PersonOutlineIcon","phoneAndroid","PhoneAndriodIcon","phoneIphone","PhoneIphoneIcon","priorityHigh","PriorityHigh","powerSetting","PowerSettingsNewIcon","removeCircle","RemoveCircle","replay","Replay","report","ReportIcon","sentiment_very_dissatisfied","SentimentVeryDissatisfiedIcon","tabletAndroid","TabletAndroidIcon","tabletMac","TabletMacIcon","thumbUp","ThumbUp","tick","CheckCircleIcon","tickOutline","CheckCircleOutlineIcon","warning","Warning","withStyles","Object","keys","theme","createStyles","small","fontSize","primary","color","colors","purple","blue","denim100","type","classes","classNameProp","className","lang","IconComponent","classNames","StyledListItem","root","padding","StyledListItemIcon","paddingRight","paddingLeft","marginRight","ListItemIcon","StyledListItemText","ListItemText","selected","palette","secondary","main","fontWeight","icon","link","text","selectedClass","button","disableGutters","to","primaryTypographyProps","variant","createMuiTheme","typography","fontFamily","useNextVariants","action","hover","disabled","darkPurple","lightPurple","lighterPurple","lightestPurple","white","red100","green100","orange100","yellow100","denim80","red80","green80","yellow80","orange80","denim60","red60","green60","yellow60","orange60","denim40","red40","green40","yellow40","orange40","denim20","red20","green20","yellow20","orange20","whiteTwo","smoke","alto","silver","grey","boulder","mortar","night","blueSmoke","blueSilver","blueGrey","blueMortar","darkNavy","burntRed","darkGreen","burntOrange","green10","orange10","red10","denim10","appDrawer","width","overrides","MuiTypography","h1","fontStyle","fontStretch","lineHeight","letterSpacing","h2","h3","body1","body2","caption","MuiOutlinedInput","borderColor","borderWidth","notchedOutline","MuiCssBaseline","body","backgroundColor","MuiFormLabel","marginBottom","MuiTableCell","sizes","cardWidth","default","medium","reduced","fullWidth","margin","noPadding","borderRadius","textBox","minHeight","position","display","comment","maxHeight","titleHeight","height","big","formLabelError","marginTop","ThemeProvider","children","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","flexGrow","contentShift","active","useState","open","setOpen","aria-label","onClick","noWrap","anchor","paper","direction","disablePadding","ConnectedSideBar","connect","currentPageMeta","tab","DashboardLayout","Error","fetch","url","options","a","async","window","response","ok","json","then","value","Promise","resolve","catch","reject","sendJSON","method","data","mode","headers","JSON","stringify","defaultState","state","allowedReducers","dataFetcher","actionType","applicationState","meta","forceRefresh","retry","dispatch","getState","dataFetcherWithRetry","currentState","includes","promise","payload","err","newRetry","undefined","callback","dataSenderWithCallback","callbacks","formData","length","forEach","dataStateReducer","initialState","typeToReducer","PENDING","REJECTED","FULFILLED","totalCount","RESET","getFingerprintDetails","userId","reducer","GenericDataContainer","loadingElement","size","useEffect","throwError","setThrowError","element","datePickerTheme","MuiIcon","MuiSvgIcon","inputDatePicker","border","click","date","React","selectedDate","setSelectedDate","utils","DateFnsUtils","format","InputProps","disableUnderline","endAdornment","disableFuture","onChange","bold","normal","lighter","customColor","weight","mockList","id","day","entry","exit","time","workFromHome","hours","textAlign","avatar","details","hoursItem","fingerprint","handleDateChange","moment","first_fingerprint","last_fingerprint","time2","diff","time3","minutes","container","item","xs","md","lg","DatePicker","Date","spacing","alignContent","map","key","scope","actionDispatcher","actionCreator","memoizeOne","args","ConnectedHome","fingerprintDetails","dispatchGetFingerprintDetails","defaultDate","toString","setDate","DataContainer","Page","HomePage","pageTitle","getUserList","contained","boxShadow","outlined","data-weight","formReducer","name","validationAlerts","pending","GenericForm","validations","submitCallback","useReducer","selectType","event","eventType","persist","target","index","handleChange","handleSubmit","formValidation","validate","user_ids","userList","dispatchGetUserList","proyect","chips","flexWrap","chip","select","minWidth","maxWidth","proyects","formCallback","allProyects","openForm","setOpenForm","presence","allowEmpty","placeholder","labelWidth","selectValue","user","filter","c","user_id","first_name","last_name","multiple","renderValue","label","numeric","proyect_id","created_at","total_users","getProyectList","ConnectedProyects","proyectList","dispatchGetProyectList","dispatchSenderAction","formCallBack","Proyects","ProyectsPage","email","proyect_ids","employ","users","allEmployees","total_proyects","ConnectedUsers","console","log","Users","UsersPage","AppRoutes","path","exact","setLogin","bindActionCreators","isSignIn","setSignIn","clientId","onSuccess","r","googleId","isLoginResponse","profileObj","onFailure","isSignedIn","RESET_PAGE","pageReducer","appReducer","combineReducers","login","page","dataDefaultState","currentPageDefaultState","loginDefaultState","configureStore","createStore","compose","applyMiddleware","thunk","App","store","Provider","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4c3b630.chunk.js","sourcesContent":["import memoize from 'memoize-one';\n\nimport es from './lang/es';\nimport { Translation } from './types';\n\nexport type Language = 'es';\n\nexport type TranslationKey = keyof Translation;\n\nexport const translations: Record<Language, Translation> = {\n  es,\n};\n\nexport const getTranslation = memoize(\n  (language: Language | undefined) => (message: TranslationKey) => {\n    return translations[language ? language : 'es'][message];\n  },\n);\n","import { Translation } from '../types';\n\nconst translation: Translation = {\n    'components.sideBar.home.label': 'Home',\n    'components.employees.allEmployees.count': 'registrados',\n    'components.employees.allEmployees.title': 'Empleados',\n    'components.proyects.allProyects.count': 'registrados',\n    'components.proyects.allProyects.title': 'Proyectos',\n    'components.lockedElement.title': 'Elemento bloqueado',\n    'components.lockedElement.subtitle': 'No estás autorizado para ver este contenido',\n    'components.home.day.label': 'Dia',\n    'components.sideBar.title': 'Proyecto fin GS',\n    'components.home.entry.label': 'Hora de entrada',\n    'components.home.exit.label': 'Hora de salida',\n    'components.home.time.label': 'Tiempo',\n    'pages.homePage.label': 'Home',\n};\n\nexport default translation;\n","import { createContext } from 'react';\n\nimport { Language } from '../../util/translations';\n\nexport const LanguageContext = createContext('es' as Language);\n","import React, { FC, Fragment } from 'react';\n\nimport { getTranslation, TranslationKey } from '../../util/translations';\n\nimport { LanguageContext } from './context';\n\ninterface Props {\n  message: TranslationKey;\n}\n\nconst Translate: FC<Props> = ({ message }) => (\n  <LanguageContext.Consumer>\n    {language => <Fragment>{getTranslation(language)(message)}</Fragment>}\n  </LanguageContext.Consumer>\n);\n\nexport default Translate;\n","import ListItem, { ListItemProps } from '@material-ui/core/ListItem';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface ListItemLinkProps extends ListItemProps {\n  to: string;\n  replace?: boolean;\n}\n\nconst ListItemLink = (props: ListItemLinkProps) => (\n  <ListItem {...props} component={Link as any} />\n);\n\nexport default ListItemLink;\n","import {\n    createStyles,\n    Theme,\n    withStyles,\n    WithStyles,\n  } from '@material-ui/core/styles';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Assignment from '@material-ui/icons/Assignment';\nimport AssignmentLateIcon from '@material-ui/icons/AssignmentLate';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport BeachAccess from '@material-ui/icons/BeachAccess';\nimport Cached from '@material-ui/icons/Cached';\nimport Calendar from '@material-ui/icons/CalendarToday';\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport CallMergeIcon from '@material-ui/icons/CallMerge';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport Check from '@material-ui/icons/Check';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport Close from '@material-ui/icons/Close';\nimport CloudOff from '@material-ui/icons/CloudOff';\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport Description from '@material-ui/icons/Description';\nimport Done from '@material-ui/icons/Done';\nimport Edit from '@material-ui/icons/Edit';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport FolderOpen from '@material-ui/icons/FolderOpen';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport GetApp from '@material-ui/icons/GetApp';\nimport Group from '@material-ui/icons/Group';\nimport CancelOutlineIcon from '@material-ui/icons/HighlightOff';\nimport Home from '@material-ui/icons/Home';\nimport ImportContacts from '@material-ui/icons/ImportContacts';\nimport InfoIcon from '@material-ui/icons/Info';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport LockIcon from '@material-ui/icons/Lock';\nimport LockOpen from '@material-ui/icons/LockOpen';\nimport Loop from '@material-ui/icons/Loop';\nimport MoreHorizontalIcon from '@material-ui/icons/MoreHoriz';\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\nimport NotInterested from '@material-ui/icons/NotInterested';\nimport CustomersIcon from '@material-ui/icons/People';\nimport CustomerIcon from '@material-ui/icons/Person';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport PhoneAndriodIcon from '@material-ui/icons/PhoneAndroid';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport PriorityHigh from '@material-ui/icons/PriorityHigh';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Replay from '@material-ui/icons/Replay';\nimport ReportIcon from '@material-ui/icons/Report';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport TabletAndroidIcon from '@material-ui/icons/TabletAndroid';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport Warning from '@material-ui/icons/Warning';\nimport classNames from 'classnames';\nimport React, { FC } from 'react';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n      small: {\n        fontSize: 20,\n      },\n      primary: {\n        color: theme.colors.purple,\n      },\n      blue: {\n        color: theme.colors.denim100,\n      },\n    });\nexport type Icons =\n    | 'account'\n    | 'addcircle'\n    | 'assignment'\n    | 'assigmentLate'\n    | 'barChart'\n    | 'beachAccess'\n    | 'cached'\n    | 'calendar'\n    | 'callMerge'\n    | 'chat'\n    | 'check'\n    | 'chevronLeft'\n    | 'chevronRight'\n    | 'clear'\n    | 'close'\n    | 'cloudOff'\n    | 'compareArrows'\n    | 'customer'\n    | 'customers'\n    | 'dashboard'\n    | 'description'\n    | 'done'\n    | 'edit'\n    | 'error'\n    | 'errorOutline'\n    | 'expandLess'\n    | 'expandMore'\n    | 'failure'\n    | 'failureOutline'\n    | 'fileCopy'\n    | 'folderOpen'\n    | 'gavel'\n    | 'getApp'\n    | 'group'\n    | 'home'\n    | 'importContacts'\n    | 'info'\n    | 'keyboardArrowDownIcon'\n    | 'launch'\n    | 'lock'\n    | 'lockOpen'\n    | 'loop'\n    | 'moneySent'\n    | 'more'\n    | 'notificationImportant'\n    | 'notInterested'\n    | 'personOutline'\n    | 'phoneAndroid'\n    | 'phoneAndroid'\n    | 'phoneIphone'\n    | 'priorityHigh'\n    | 'powerSetting'\n    | 'removeCircle'\n    | 'replay'\n    | 'report'\n    | 'sentiment_very_dissatisfied'\n    | 'tabletAndroid'\n    | 'tabletMac'\n    | 'thumbUp'\n    | 'tick'\n    | 'tickOutline'\n    | 'warning';\ninterface ComponentProps {\n    type: Icons;\n    primary?: boolean;\n    blue?: boolean;\n  }\ntype Props = ComponentProps &\n    WithStyles<typeof styles> & { className?: string } & SvgIconProps;\n\nexport const iconToComponentMap: Readonly<Record<Icons, typeof SvgIcon>> = {\n    account: AccountCircleIcon,\n    addcircle: AddCircle,\n    assignment: Assignment,\n    assigmentLate: AssignmentLateIcon,\n    barChart: BarChartIcon,\n    beachAccess: BeachAccess,\n    cached: Cached,\n    calendar: Calendar,\n    callMerge: CallMergeIcon,\n    chat: ChatIcon,\n    check: Check,\n    chevronLeft: ChevronLeftIcon,\n    chevronRight: ChevronRightIcon,\n    clear: Clear,\n    close: Close,\n    cloudOff: CloudOff,\n    compareArrows: CompareArrowsIcon,\n    customer: CustomerIcon,\n    customers: CustomersIcon,\n    dashboard: DashboardIcon,\n    description: Description,\n    done: Done,\n    edit: Edit,\n    error: ErrorIcon,\n    errorOutline: ErrorOutlineIcon,\n    expandLess: ExpandLessIcon,\n    expandMore: ExpandMoreIcon,\n    failure: CancelIcon,\n    failureOutline: CancelOutlineIcon,\n    fileCopy: FileCopyOutlinedIcon,\n    folderOpen: FolderOpen,\n    gavel: GavelIcon,\n    getApp: GetApp,\n    group: Group,\n    home: Home,\n    importContacts: ImportContacts,\n    info: InfoIcon,\n    keyboardArrowDownIcon: KeyboardArrowDownIcon,\n    launch: LaunchIcon,\n    lock: LockIcon,\n    lockOpen: LockOpen,\n    loop: Loop,\n    moneySent: CallMadeIcon,\n    more: MoreHorizontalIcon,\n    notificationImportant: NotificationImportant,\n    notInterested: NotInterested,\n    personOutline: PersonOutlineIcon,\n    phoneAndroid: PhoneAndriodIcon,\n    phoneIphone: PhoneIphoneIcon,\n    priorityHigh: PriorityHigh,\n    powerSetting: PowerSettingsNewIcon,\n    removeCircle: RemoveCircle,\n    replay: Replay,\n    report: ReportIcon,\n    sentiment_very_dissatisfied: SentimentVeryDissatisfiedIcon,\n    tabletAndroid: TabletAndroidIcon,\n    tabletMac: TabletMacIcon,\n    thumbUp: ThumbUp,\n    tick: CheckCircleIcon,\n    tickOutline: CheckCircleOutlineIcon,\n    warning: Warning,\n  };\nexport const iconKeys: Icons[] = Object.keys(iconToComponentMap) as Icons[];\nexport const Icon: FC<Props> = ({\n    type,\n    classes,\n    primary,\n    blue,\n    className: classNameProp,\n    lang,\n    ...props\n  }) => {\n    const IconComponent = iconToComponentMap[type];\n    return (\n      <IconComponent\n        {...props}\n        className={classNames(classNameProp, {\n          [classes.primary]: primary,\n          [classes.blue]: blue,\n        })}\n      />\n    );\n  };\nexport default withStyles(styles)(Icon);\n","import ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport React, { FC, ReactNode } from 'react';\n\nimport ListItemLink from '../ListItemLink';\nimport Icon, { Icons } from '../Icon';\n\nexport const StyledListItem = withStyles(() =>\n  createStyles({\n    root: {\n      padding: '16px 18px',\n      '&:focus': {\n        color: 'black',\n      },\n    },\n  }),\n)(ListItemLink);\n\nexport const StyledListItemIcon = withStyles({\n  root: {\n    paddingRight: '12px',\n    paddingLeft: '0px',\n    marginRight: '0px',\n  },\n})(ListItemIcon);\n\nexport const StyledListItemText = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: '0px',\n      paddingRight: '0px',\n    },\n  }),\n)(ListItemText);\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    selected: {\n      color: theme.palette.secondary.main,\n      fontWeight: 'bold',\n    },\n  });\n\ninterface ComponentProp {\n  icon: Icons;\n  selected: boolean;\n  link: string;\n  text: ReactNode;\n}\n\ntype Props = ComponentProp & WithStyles<typeof styles>;\n\nexport const ListTab: FC<Props> = ({ icon, selected, link, text, classes }) => {\n  const selectedClass = selected ? classes.selected : '';\n  return (\n    <StyledListItem button disableGutters={false} to={link} selected={selected}>\n      <StyledListItemIcon className={selectedClass}>\n        <Icon type={icon} color=\"secondary\"/>\n      </StyledListItemIcon>\n      <StyledListItemText\n        className={selectedClass}\n        primary={text}\n        primaryTypographyProps={{\n          className: selectedClass,\n          variant: 'body1',\n        }}\n      />\n    </StyledListItem>\n  );\n};\n\nexport default withStyles(styles)(ListTab);\n","import { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport React, { CSSProperties, FC } from 'react';\n\nexport interface ThemeColors {\n  disabled: CSSProperties['color'];\n\n  purple: CSSProperties['color'];\n  darkPurple: CSSProperties['color'];\n  lightPurple: CSSProperties['color'];\n  lighterPurple: CSSProperties['color'];\n  lightestPurple: CSSProperties['color'];\n\n  white: CSSProperties['color'];\n\n  denim100: CSSProperties['color'];\n  denim80: CSSProperties['color'];\n  denim60: CSSProperties['color'];\n  denim40: CSSProperties['color'];\n  denim20: CSSProperties['color'];\n  denim10: CSSProperties['color'];\n\n  orange100: CSSProperties['color'];\n  orange80: CSSProperties['color'];\n  orange60: CSSProperties['color'];\n  orange40: CSSProperties['color'];\n  orange20: CSSProperties['color'];\n  orange10: CSSProperties['color'];\n\n  green100: CSSProperties['color'];\n  green80: CSSProperties['color'];\n  green60: CSSProperties['color'];\n  green40: CSSProperties['color'];\n  green20: CSSProperties['color'];\n  green10: CSSProperties['color'];\n\n  yellow100: CSSProperties['color'];\n  yellow80: CSSProperties['color'];\n  yellow60: CSSProperties['color'];\n  yellow40: CSSProperties['color'];\n  yellow20: CSSProperties['color'];\n\n  red100: CSSProperties['color'];\n  red80: CSSProperties['color'];\n  red60: CSSProperties['color'];\n  red40: CSSProperties['color'];\n  red20: CSSProperties['color'];\n  red10: CSSProperties['color'];\n\n  whiteTwo: CSSProperties['color'];\n  smoke: CSSProperties['color'];\n  alto: CSSProperties['color'];\n  silver: CSSProperties['color'];\n  grey: CSSProperties['color'];\n  boulder: CSSProperties['color'];\n  mortar: CSSProperties['color'];\n  night: CSSProperties['color'];\n  blueSmoke: CSSProperties['color'];\n  blueSilver: CSSProperties['color'];\n  blueGrey: CSSProperties['color'];\n  blueMortar: CSSProperties['color'];\n  darkNavy: CSSProperties['color'];\n  burntRed: CSSProperties['color'];\n  darkGreen: CSSProperties['color'];\n  burntOrange: CSSProperties['color'];\n  readonly [key: string]: CSSProperties['color'];\n}\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  // specificy custom gloabal theme variables here\n  interface Theme {\n    appDrawer: {\n      width: CSSProperties['width'];\n    };\n    colors: ThemeColors;\n    sizes: {\n      cardWidth: {\n        default: CSSProperties['width'];\n        small: CSSProperties['width'];\n        medium: CSSProperties['width'];\n        reduced: CSSProperties['width'];\n      };\n      fullWidth: CSSProperties['width'];\n      margin: CSSProperties['margin'];\n      padding: CSSProperties['padding'];\n      noPadding: CSSProperties['padding'];\n      borderRadius: CSSProperties['borderRadius'];\n      textBox: {\n        minHeight: CSSProperties['height'];\n        position: CSSProperties['marginRight'];\n        display: CSSProperties['display'];\n      };\n      comment: {\n        maxHeight: CSSProperties['height'];\n        titleHeight: CSSProperties['height'];\n      };\n      icon: {\n        small: {\n          height: CSSProperties['height'];\n          width: CSSProperties['width'];\n        };\n        medium: {\n          height: CSSProperties['height'];\n          width: CSSProperties['width'];\n        };\n        big: {\n          height: CSSProperties['height'];\n          width: CSSProperties['width'];\n        };\n      };\n    };\n    formLabelError: {\n      color: CSSProperties['color'];\n      display: CSSProperties['display'];\n      fontSize: CSSProperties['fontSize'];\n      marginBottom: CSSProperties['marginBottom'];\n      marginTop: CSSProperties['marginTop'];\n      fontWeight: CSSProperties['fontWeight'];\n    };\n  }\n  // allow configuration using `createMuiTheme`\n  interface ThemeOptions {\n    appDrawer?: {\n      width?: CSSProperties['width'];\n    };\n    colors?: ThemeColors;\n    sizes?: {\n      cardWidth?: {\n        default?: CSSProperties['width'];\n        small?: CSSProperties['width'];\n        medium?: CSSProperties['width'];\n        reduced?: CSSProperties['width'];\n      };\n      fullWidth?: CSSProperties['width'];\n      margin?: CSSProperties['margin'];\n      padding?: CSSProperties['padding'];\n      noPadding?: CSSProperties['padding'];\n      borderRadius?: CSSProperties['borderRadius'];\n      textBox: {\n        minHeight: CSSProperties['height'];\n        position: CSSProperties['marginRight'];\n        display: CSSProperties['display'];\n      };\n      comment?: {\n        maxHeight?: CSSProperties['height'];\n        titleHeight?: CSSProperties['height'];\n      };\n      icon?: {\n        small?: {\n          height?: CSSProperties['height'];\n          width?: CSSProperties['width'];\n        };\n        medium?: {\n          height?: CSSProperties['height'];\n          width?: CSSProperties['width'];\n        };\n        big?: {\n          height?: CSSProperties['height'];\n          width?: CSSProperties['width'];\n        };\n      };\n    };\n    formLabelError?: {\n      color?: CSSProperties['color'];\n      display?: CSSProperties['display'];\n      fontSize?: CSSProperties['fontSize'];\n      marginBottom?: CSSProperties['marginBottom'];\n      marginTop?: CSSProperties['marginTop'];\n      fontWeight?: CSSProperties['fontWeight'];\n    };\n  }\n}\n\nexport const theme = createMuiTheme({\n  typography: {\n    fontFamily: '\"TTNorms\", \"Helvetica\", \"Arial\", sans-serif',\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: '#fff',\n    },\n    secondary: {\n      main: '#0174DF',\n    },\n    action: {\n      selected: '#eef4f8',\n      hover: '#eef4f8',\n    },\n    text: {\n      primary: '#333',\n    },\n    error: {\n      main: '#e40000',\n    },\n  },\n  colors: {\n    disabled: '#d091bb',\n    purple: '#a12378',\n    darkPurple: '#701854',\n    lightPurple: '#b34f93',\n    lighterPurple: '#d091bb',\n    lightestPurple: '#f8eef5',\n    white: '#ffffff',\n    denim100: '#0d7cbb',\n    red100: '#e40000',\n    green100: '#00a800',\n    orange100: '#ff9029',\n    yellow100: '#ffdd29',\n    denim80: 'rgba(13, 124, 187, 0.8)',\n    red80: 'rgba(228, 0, 0, 0.8)',\n    green80: 'rgba(0, 168, 0, 0.8)',\n    yellow80: 'rgba(255, 221, 41, 0.8)',\n    orange80: 'rgba(255, 144, 41, 0.8)',\n    denim60: 'rgba(13, 124, 187, 0.6)',\n    red60: 'rgba(228, 0, 0, 0.6)',\n    green60: 'rgba(0, 168, 0, 0.6)',\n    yellow60: 'rgba(255, 221, 41, 0.6)',\n    orange60: 'rgba(255, 144, 41, 0.6)',\n    denim40: 'rgba(13, 124, 187, 0.4)',\n    red40: 'rgba(228, 0, 0, 0.4)',\n    green40: 'rgba(0, 168, 0, 0.4)',\n    yellow40: 'rgba(255, 221, 41, 0.4)',\n    orange40: 'rgba(255, 144, 41, 0.4)',\n    denim20: 'rgba(13, 124, 187, 0.2)',\n    red20: 'rgba(228, 0, 0, 0.2)',\n    green20: 'rgba(0, 168, 0, 0.2)',\n    yellow20: 'rgba(255, 221, 41, 0.2)',\n    orange20: 'rgba(255, 144, 41, 0.2)',\n    whiteTwo: '#fafafa',\n    smoke: '#f5f5f5',\n    alto: '#d3d3d3',\n    silver: '#b9b9b9',\n    grey: '#949494',\n    boulder: '#757575',\n    mortar: '#5a5a5a',\n    night: '#333333',\n    blueSmoke: '#f5f6fa',\n    blueSilver: '#e5e6ec',\n    blueGrey: '#d4d6e3',\n    blueMortar: '#a8abbf',\n    darkNavy: '#0f4880',\n    burntRed: '#cf000f',\n    darkGreen: '#1d781d',\n    burntOrange: '#b95000',\n    green10: '#e0f1e0',\n    orange10: ' #fff4ec',\n    red10: '#f7e0e0',\n    denim10: '#e1ecf3',\n  },\n  appDrawer: {\n    width: 250,\n  },\n  overrides: {\n    MuiTypography: {\n      h1: {\n        fontSize: '48px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '52px',\n        letterSpacing: 'normal',\n      },\n      h2: {\n        fontSize: '36px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '40px',\n        letterSpacing: '-0.25px',\n      },\n      h3: {\n        fontSize: '20px',\n        fontWeight: 'bold',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '24px',\n        letterSpacing: '-0.25px',\n      },\n      body1: {\n        fontSize: '16px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '20px',\n        letterSpacing: '-0.25px',\n      },\n      body2: {\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '16px',\n        letterSpacing: '-0.22px',\n      },\n      button: {\n        fontSize: '14px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '16px',\n        letterSpacing: '0.65px',\n      },\n      caption: {\n        fontSize: '12px',\n        fontStyle: 'normal',\n        fontStretch: 'normal',\n        lineHeight: '16px',\n        letterSpacing: '-0.4px',\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        fontWeight: 'lighter',\n        fontSize: '16px',\n        color: '#757575',\n        '& $notchedOutline': {\n          borderColor: '#d9d9d9',\n        },\n        '&$focused $notchedOutline': {\n          borderColor: '#949494',\n          borderWidth: 1,\n        },\n        '&:hover:not($disabled):not($focused):not($error) $notchedOutline': {\n          borderColor: '#b9b9b9',\n        },\n      },\n      notchedOutline: {\n        borderColor: '#d9d9d9',\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        body: {\n          backgroundColor: '#f5f6fa', // blue smoke\n        },\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        color: '#333',\n        marginBottom: '4px',\n        '&$focused': {\n          color: '#333',\n        },\n      },\n    },\n    MuiTableCell: {\n      root: {\n        padding: '12px 8px 12px 24px',\n      },\n    },\n  },\n  sizes: {\n    cardWidth: {\n      default: '1052px',\n      small: '188px',\n      medium: '350px',\n      reduced: '826px',\n    },\n    fullWidth: '100%',\n    margin: '20px',\n    padding: '24px 40px',\n    noPadding: '0',\n    borderRadius: '4px',\n    textBox: {\n      minHeight: '100px',\n      position: '10px',\n      display: 'block',\n    },\n    comment: {\n      maxHeight: '400px',\n      titleHeight: '34px',\n    },\n    icon: {\n      small: {\n        height: '16px',\n        width: '16px',\n      },\n      medium: {\n        height: '24px',\n        width: '24px',\n      },\n      big: {\n        height: '32px',\n        width: '32px',\n      },\n    },\n  },\n  formLabelError: {\n    color: '#cf000f',\n    display: 'block',\n    fontSize: '14px',\n    marginBottom: '12px',\n    marginTop: '-5px',\n    fontWeight: 'lighter',\n  },\n});\n\nexport const ThemeProvider: FC<{}> = ({ children }) => {\n  return <MuiThemeProvider theme={theme}>{children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport { withStyles, WithStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { ReactNode, useState } from \"react\";\n\nimport {\n  AppBar,\n  Divider,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\nimport classNames from \"classnames\";\nimport Translate from \"../../components/Translation\";\nimport { Tab } from \"../../redux/reducers/currentPageMeta\";\nimport ListTab from \"../ListTab\";\n\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport { theme } from \"../ThemeProvider\";\n\nconst drawerWidth = theme.appDrawer.width!;\n\nconst styles = () => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.primary.main\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: \"2px\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: 1,\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: \"10px\",\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nexport interface ComponentProps {\n  active?: Tab;\n  children: ReactNode;\n}\n\ntype Props = ComponentProps & WithStyles<typeof styles>;\n\nexport const SideBar = ({ classes, active, children }: Props) => {\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => setOpen(true);\n  const handleDrawerClose = () => setOpen(false);\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"fixed\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={classNames(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap color=\"primary\">\n            <Translate message=\"components.sideBar.title\" />\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon color=\"secondary\" />\n            ) : (\n              <ChevronRightIcon color=\"secondary\" />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List component=\"nav\" disablePadding>\n          <ListTab\n            icon=\"home\"\n            selected={active === \"Home\"}\n            link=\"/home\"\n            text={<Translate message=\"components.sideBar.home.label\" />}\n          />\n          <ListTab\n            icon=\"group\"\n            selected={active === \"Employees\"}\n            link=\"/empleados\"\n            text=\"Empleados\"\n          />\n          <ListTab\n            icon=\"group\"\n            selected={active === \"Proyects\"}\n            link=\"/proyectos\"\n            text=\"Proyectos\"\n          />\n          <Divider />\n          <ListTab\n            icon=\"powerSetting\"\n            selected={active === \"Home\"}\n            link=\"/logout\"\n            text=\"Logout\"\n          />\n        </List>\n      </Drawer>\n      <main\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(SideBar);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\n\nimport SideBar, { ComponentProps } from '../../components/SideBar';\nimport { CurrentPageMeta } from '../../redux/reducers/currentPageMeta';\nimport { AppState } from '../../redux/state';\n\ninterface StateProps {\n  currentPageMeta: CurrentPageMeta;\n}\n\ntype Props = StateProps & ComponentProps;\n\nconst mapStateToProps = ({ currentPageMeta }: AppState): StateProps => ({\n  currentPageMeta,\n});\n\nconst SideBarContainer: FC<Props> = ({ currentPageMeta, children }) => {\n  return <SideBar children={children} active={currentPageMeta.tab} />;\n};\n\nexport const ConnectedSideBar = connect(mapStateToProps)(SideBarContainer);\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React, { FC, ReactNode } from \"react\";\n\nimport { ConnectedSideBar } from \"../../containers/SideBar\";\n\ninterface ComponentProps {\n  tab?: string;\n  children: ReactNode;\n}\n\ntype Props = ComponentProps;\n\nconst DashboardLayout: FC<Props> = ({ children }) => {\n  return (\n    <div>\n      <CssBaseline />\n      <ConnectedSideBar children={children} />\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import 'whatwg-fetch';\n\nexport class ResponseError extends Error {\n  constructor(private response: Response) {\n    super(response.statusText);\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n  public async details(): Promise<any> {\n    try {\n      const body = await this.response.json();\n      return body;\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n\nexport async function fetch(url: string, options?: RequestInit): Promise<any> {\n  const response = await window.fetch(url, options);\n\n  if (response.ok) {\n    return response\n      .json()\n      .then(value => Promise.resolve(value))\n      .catch(() => Promise.resolve(null));\n  } else {\n    return response.json().then(value => Promise.reject(value));\n  }\n}\n\nexport type SendMethod = 'PUT' | 'POST' | 'PATCH' | 'DELETE';\n\nexport async function sendJSON(\n  url: string,\n  method: SendMethod,\n  data?: {},\n): Promise<any> {\n  return fetch(url, {\n    method,\n    mode: 'same-origin',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({\n      data,\n    }),\n  });\n}\n\nexport async function sendFile(\n  url: string,\n  method: SendMethod,\n  file: FormData,\n): Promise<any> {\n  const options: RequestInit = {\n    method,\n    mode: 'same-origin',\n    body: file,\n  };\n\n  const response = await window.fetch(url, options);\n\n  if (response.ok) {\n    return response\n      .json()\n      .then(value => Promise.resolve(value))\n      .catch(() => Promise.resolve(null));\n  } else {\n    return response.json().then(value => Promise.reject(value));\n  }\n}\n","import { ErrorResponse } from '../../../../../types/build/response';\nimport { Reducer } from 'redux';\nimport typeToReducer from 'type-to-reducer';\n\nimport { fetch, sendFile, sendJSON } from '../../../util/fetch';\nimport { Action } from '../../reducer';\nimport { AppState } from '../../state';\n\nexport interface InitialState {\n    state: 'INIT';\n    data?: any;\n}\n\nexport interface LoadingState {\n    state: 'PENDING';\n}\n\nexport interface SuccessState<T> {\n    state: 'READY';\n    data: T;\n}\n\nexport interface ErrorState {\n    state: 'ERROR';\n    error: ErrorResponse;\n}\n\nexport type DataState<T> =\n    | LoadingState\n    | SuccessState<T>\n    | ErrorState\n    | InitialState;\n\nexport type DataStates = 'INIT' | 'PENDING' | 'READY' | 'ERROR';\n\nexport interface MetaOption {\n    forceRefresh: boolean;\n    retry?: number;\n    callback?: (...args: any[]) => void;\n}\n\nexport const defaultState: InitialState = {\n    state: 'INIT',\n};\n\nconst allowedReducers = [''];\n\nexport const dataReset = (actionType: string) => ({\n    type: `${actionType}_RESET`,\n});\n\nexport function dataFetcher<T>(\n    url: string,\n    actionType: T,\n    applicationState: keyof AppState,\n    meta: MetaOption = {\n        forceRefresh: false,\n        retry: 0,\n    },\n) {\n    return (\n        dispatch: (a: Action<any>) => Promise<any>,\n        getState: () => AppState,\n    ) => {\n        return dataFetcherWithRetry(\n            url,\n            actionType,\n            applicationState,\n            dispatch,\n            getState,\n            meta,\n        );\n    };\n}\n\nconst dataFetcherWithRetry = <T>(\n    url: string,\n    actionType: T,\n    applicationState: keyof AppState,\n    dispatch: (a: Action<any>) => Promise<any>,\n    getState: () => AppState,\n    meta: {\n        forceRefresh: boolean;\n        retry?: number;\n        callback?: (...args: any[]) => void;\n    },\n) => {\n    const currentState = getState()[applicationState];\n    const initStateOrErrorState =\n        'state' in currentState &&\n        (allowedReducers.includes(applicationState) ||\n            (currentState.state === 'INIT' || currentState.state === 'ERROR'));\n    if (initStateOrErrorState || meta.forceRefresh) {\n        const promise = fetch(url);\n\n        return dispatch({\n            type: actionType,\n            payload: promise,\n        }).catch((err: ErrorResponse) => {\n            if (meta.retry) {\n                const newRetry = meta.retry === 1 ? undefined : meta.retry - 1;\n                // TODO: work out whether this promise should be awaited here.\n                // tslint:disable-next-line: no-floating-promises\n                dataFetcherWithRetry(\n                    url,\n                    actionType,\n                    applicationState,\n                    dispatch,\n                    getState,\n                    {\n                        forceRefresh: meta.forceRefresh,\n                        retry: newRetry,\n                        callback: meta.callback,\n                    },\n                );\n            } else {\n                if (meta.callback) {\n                    meta.callback(dispatch, getState);\n                }\n                // TODO: work out whether this promise should be awaited here.\n                // tslint:disable-next-line: no-floating-promises\n            }\n        });\n    }\n    return Promise.resolve(undefined);\n};\n\nexport function dataSender<T>(\n    url: string,\n    method: 'PUT' | 'POST' | 'PATCH' | 'DELETE',\n    data: {} | undefined,\n    actionType: T,\n    applicationState: keyof AppState,\n    meta = {\n        forceRefresh: false,\n    },\n) {\n    return (\n        dispatch: (a: Action<any>) => Promise<any>,\n        getState: () => AppState,\n    ) => {\n        const currentState = getState()[applicationState];\n        if (\n            ('state' in currentState &&\n                (currentState.state === 'INIT' || currentState.state === 'ERROR')) ||\n            meta.forceRefresh\n        ) {\n            const promise = sendJSON(url, method, data);\n            return dispatch({\n                type: actionType,\n                payload: promise,\n            });\n        }\n        return Promise.resolve(undefined);\n    };\n}\n\nexport function dataSenderWithCallback(\n    url: string,\n    method: 'PUT' | 'POST' | 'PATCH' | 'DELETE',\n    callbacks: Array<() => void> = [],\n    tag: string = 'ACTION_SUCCEEDED',\n    formData: {},\n): (dispatch: any, getState: any) => Promise<any> {\n    return (\n        dispatch: (a: Action<any>) => Promise<any>,\n        getState: () => AppState,\n    ) => {\n        const stringify = JSON.stringify(formData);\n        const promise = sendJSON(\n            url,\n            method,\n            stringify.length > 2 ? formData : undefined,\n        );\n        promise\n            .then(() => {\n                callbacks.forEach(callback => {\n                    callback();\n                });\n                // TODO: work out whether this promise should be awaited here.\n                // tslint:disable-next-line: no-floating-promises\n            })\n            .catch((err: ErrorResponse) => {\n                callbacks.forEach(callback => {\n                    callback();\n                });\n                // TODO: work out whether this promise should be awaited here.\n                // tslint:disable-next-line: no-floating-promises\n            });\n        return Promise.resolve(undefined);\n    };\n}\n\n\nexport function fileSender<T>(\n    url: string,\n    method: 'PUT' | 'POST',\n    formData: FormData,\n    actionType: T,\n    applicationState: keyof AppState,\n    meta = {\n        forceRefresh: false,\n    },\n) {\n    return (\n        dispatch: (a: Action<any>) => Promise<any>,\n        getState: () => AppState,\n    ) => {\n        const currentState = getState()[applicationState];\n        if (\n            ('state' in currentState &&\n                (currentState.state === 'INIT' || currentState.state === 'ERROR')) ||\n            meta.forceRefresh\n        ) {\n            const promise = sendFile(url, method, formData);\n            return dispatch({\n                type: actionType,\n                payload: promise,\n            });\n        }\n        return Promise.resolve(undefined);\n    };\n}\n\nexport function dataStateReducer<S, T>(actionType: string, initialState = {}) {\n    return typeToReducer(\n        {\n            [actionType]: {\n                PENDING: (): LoadingState => ({\n                    state: 'PENDING',\n                }),\n                REJECTED: (state, action): ErrorState => ({\n                    state: 'ERROR',\n                    error: action.payload,\n                }),\n                FULFILLED: (state, action): SuccessState<S> => ({\n                    state: 'READY',\n                    data:\n                        (action.payload &&\n                            (action.payload.totalCount\n                                ? action.payload\n                                : action.payload.data)) ||\n                        null,\n                }),\n                RESET: (state, action): InitialState => ({\n                    state: 'INIT',\n                    data: initialState,\n                }),\n            },\n        },\n        defaultState,\n    ) as Reducer<S, Action<T>>;\n}\nexport default dataStateReducer;\n","import { GetFingerprintResponse } from '../../../../../types/build/fingerprint';\n\nimport { ThunkResult } from '../../reducer';\nimport dataStateReducer, {\n  dataFetcher,\n  DataState,\n} from '../dataState';\n\nexport const FINGERPRINT_DETAILS = 'FINGERPRINT_DETAILS';\n\nexport type FINGERPRINT_DETAILS = typeof FINGERPRINT_DETAILS;\n\nexport type FingerprintDetails = GetFingerprintResponse;\n\nexport type DefaultState = DataState<GetFingerprintResponse['data']>;\n\nexport type GetFingerprintDetails = ThunkResult<Promise<FingerprintDetails>>;\n\nconst defaultLink = 'api/fingerprint';\n\nexport const getFingerprintDetails = (userId: string, forceRefresh: boolean = false): GetFingerprintDetails => {\n  const url = `${defaultLink}/${userId}`;\n  return dataFetcher(url, FINGERPRINT_DETAILS, 'fingerprintDetails', {\n    forceRefresh,\n  });\n};\n\nconst reducer = dataStateReducer<DefaultState, FINGERPRINT_DETAILS>(FINGERPRINT_DETAILS);\n\nexport default reducer;\n","import CircularProgress from '@material-ui/core/CircularProgress';\nimport React, { Fragment, ReactNode, useEffect, useState } from 'react';\n\nimport { DataState } from '../../redux/reducers/dataState';\n\nexport interface GenericDataProps<T> {\n  dataFetcher?: () => void;\n  children: (data: T) => ReactNode;\n  data: DataState<T>;\n  loadingElement?: ReactNode;\n  errorElement?: ReactNode;\n}\nexport function GenericDataContainer<T>({\n  data,\n  children,\n  dataFetcher,\n  loadingElement = (\n      <CircularProgress color=\"secondary\" size={24} />\n  ),\n}: GenericDataProps<T>) {\n  useEffect(\n    () => {\n      if (dataFetcher) {\n        dataFetcher();\n      }\n    },\n    [dataFetcher],\n  );\n\n  const [throwError, setThrowError] = useState(false);\n\n  let element: {} | null | undefined = null;\n\n  switch (data.state) {\n    case 'PENDING':\n      if (!throwError) {\n        setThrowError(true);\n      }\n\n      element = loadingElement;\n      break;\n\n    case 'READY':\n      element = children(data.data);\n      break;\n\n    case 'ERROR':\n      if (throwError) {\n        throw data.error;\n      }\n      break;\n  }\n  return <Fragment>{element}</Fragment>;\n}\n\nexport default GenericDataContainer;\n","import DateFnsUtils from '@date-io/date-fns';\nimport {\n  createMuiTheme,\n  createStyles,\n  InputAdornment,\n  Theme,\n  WithStyles,\n  withStyles,\n} from '@material-ui/core';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { DatePicker, MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport React, { FC } from 'react';\nimport Icon from '../Icon';\nimport { theme } from '../ThemeProvider';\n\nconst styles = (theme: Theme) => {\n  return createStyles({\n    inputDatePicker: {\n      backgroundColor: theme.colors.white,\n      padding: '6px 14px',\n      border: `solid 1px ${theme.colors.blueSilver}`,\n      fontSize: '14px',\n      borderRadius: '3px',\n      width: '160px',\n      fontWeight: 'lighter',\n    },\n  });\n};\n\nconst datePickerTheme = createMuiTheme({\n  typography: {\n    fontFamily: '\"TTNorms\", \"Helvetica\", \"Arial\", sans-serif',\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main: theme.palette.secondary.main,\n    },\n    secondary: {\n      main: '#fff',\n    },\n    action: {\n      selected: '#f8eef5',\n      hover: '#f8eef5',\n    },\n    text: {\n      primary: '#333',\n    },\n  },\n  overrides: {\n    MuiIcon: {\n      root: {\n        width: '16px',\n        height: '16px',\n        fontSize: '12px',\n        color: '#5a5a5a',\n      },\n    },\n    MuiSvgIcon: {\n      root: {\n        width: '16px',\n        height: '16px',\n        fontSize: '12px',\n        color: '#5a5a5a',\n      },\n    },\n  },\n});\n\ninterface ComponentProps {\n  click: (date: Date) => void;\n  date: Date;\n}\nexport type InternalProps = ComponentProps & WithStyles<typeof styles>;\n\nconst DatePickerComponent: FC<InternalProps> = ({\n  classes,\n  click,\n  date,\n}) => {\n  const [selectedDate, setSelectedDate] = React.useState<Date>(date);\n  const handleDateChange = (date: Date) => {\n      setSelectedDate(date);\n      click(date);\n  };\n\n  return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <MuiThemeProvider theme={datePickerTheme}>\n          <DatePicker\n            format=\"dd/MM/yyyy\"\n            InputProps={{\n              className: classes.inputDatePicker,\n              disableUnderline: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Icon type=\"calendar\" />\n                </InputAdornment>\n              ),\n            }}\n            disableFuture\n            value={selectedDate}\n            onChange={handleDateChange}\n          />\n        </MuiThemeProvider>\n      </MuiPickersUtilsProvider>\n  );\n};\n\nexport default withStyles(styles)(DatePickerComponent);\n","import {\n    createStyles,\n    Theme,\n    withStyles,\n    WithStyles,\n  } from '@material-ui/core/styles';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\nimport classNames from 'classnames';\nimport React, { FC } from 'react';\n\nimport { ThemeColors } from '../ThemeProvider';\n\nconst styles = (theme: Theme) =>\n    createStyles({\n      bold: {\n        fontWeight: 'bold',\n      },\n      normal: {\n        fontWeight: 'normal',\n      },\n      lighter: {\n        fontWeight: 'lighter',\n      },\n      night: {\n        color: theme.colors.night,\n      },\n      boulder: {\n        color: theme.colors.boulder,\n      },\n      purple: {\n        color: theme.colors.purple,\n      },\n      darkGreen: {\n        color: theme.colors.darkGreen,\n      },\n      burntOrange: {\n        color: theme.colors.burntOrange,\n      },\n      burntRed: {\n        color: theme.colors.burntRed,\n      },\n      darkNavy: {\n        color: theme.colors.darkNavy,\n      },\n      green100: {\n        color: theme.colors.green100,\n      },\n      red100: {\n        color: theme.colors.red100,\n      },\n      orange100: {\n        color: theme.colors.orange100,\n      },\n      silver: {\n        color: theme.colors.silver,\n      },\n      denim100: {\n        color: theme.colors.denim100,\n      },\n      alto: {\n        color: theme.colors.alto,\n      },\n    });\n\nexport const typeVariants = [\n    'h1',\n    'h2',\n    'h3',\n    'body1',\n    'body2',\n    'button',\n    'caption',\n  ] as const;\ntype TypeTuple = typeof typeVariants;\nexport type TypeVariant = TypeTuple[number]; // union type\n\nexport const weightVariants = ['bold', 'normal', 'lighter'] as const;\ntype WeightTuple = typeof weightVariants;\nexport type WeightVariant = WeightTuple[number]; // union type\n\nexport type CustomColorVariant = keyof Pick<\n    ThemeColors,\n    | 'night'\n    | 'boulder'\n    | 'purple'\n    | 'darkGreen'\n    | 'burntOrange'\n    | 'burntRed'\n    | 'darkNavy'\n    | 'green100'\n    | 'red100'\n    | 'orange100'\n    | 'silver'\n    | 'denim100'\n    | 'alto'\n  >;\n\ninterface CustomTypographyProps {\n    variant: TypeVariant;\n    weight?: WeightVariant;\n    customColor?: CustomColorVariant;\n  }\n\ntype Props = CustomTypographyProps &\n    WithStyles<typeof styles> & { className?: string } & TypographyProps;\n\nexport const TypographyComponent: FC<Props> = ({\n    className,\n    customColor,\n    weight,\n    classes,\n    ...props\n  }) => {\n    return (\n      <Typography\n        {...props}\n        className={\n          classes &&\n          classNames(\n            {\n              [classes.bold]: weight === 'bold',\n              [classes.normal]: weight === 'normal',\n              [classes.lighter]: weight === 'lighter',\n              [classes.night]: customColor === 'night',\n              [classes.boulder]: customColor === 'boulder',\n              [classes.purple]: customColor === 'purple',\n              [classes.darkGreen]: customColor === 'darkGreen',\n              [classes.burntOrange]: customColor === 'burntOrange',\n              [classes.burntRed]: customColor === 'burntRed',\n              [classes.darkNavy]: customColor === 'darkNavy',\n              [classes.green100]: customColor === 'green100',\n              [classes.red100]: customColor === 'red100',\n              [classes.orange100]: customColor === 'orange100',\n              [classes.silver]: customColor === 'silver',\n              [classes.denim100]: customColor === 'denim100',\n              [classes.alto]: customColor === 'alto',\n            },\n            className,\n          )\n        }\n      />\n    );\n  };\n\nexport default withStyles(styles)(TypographyComponent);\n","export const mockList = [{\n    id: 1,\n    day: '08 Apr 2020',\n    entry: '8:00',\n    exit: '5:30',\n    time: '8.30',\n    workFromHome: false,\n}, {\n    id: 2,\n    day: '09 Apr 2020',\n    entry: '8:00',\n    exit: '5:30',\n    time: '8.30',\n    workFromHome: false,\n}, {\n    id: 3,\n    day: '10 Apr 2020',\n    entry: '8:00',\n    exit: '5:30',\n    time: '8.30',\n    workFromHome: false,\n}, {\n    id: 4,\n    day: '11 Apr 2020',\n    entry: '8:00',\n    exit: '5:30',\n    time: '8.30',\n    workFromHome: false,\n}];\n","import {\n  Avatar,\n  createStyles,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Theme,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { FC } from \"react\";\nimport { Fingerprint } from \"../../../../types/build/fingerprint\";\nimport DatePickerComponent from \"../DatePicker\";\nimport Icon from \"../Icon\";\nimport Translate from \"../Translation\";\nimport Typography from \"../Typography\";\nimport { mockList } from \"./mockList\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    hours: {\n      marginTop: \"50px\",\n      marginBottom: \"50px\",\n      textAlign: \"center\"\n    },\n    paper: {\n      padding: \"20px\",\n      height: \"100%\",\n      margin: \"20px\"\n    },\n    avatar: {\n      margin: \"10px\",\n      height: \"100px\",\n      width: \"100px\",\n      fontSize: \"50px\",\n      backgroundColor: theme.palette.secondary.main\n    },\n    details: {\n      marginBottom: \"10px\"\n    },\n    hoursItem: {\n      border: `2px solid ${theme.palette.secondary.main}`,\n      padding: \"20px\",\n      backgroundColor: theme.palette.action.selected\n    }\n  });\n\ninterface ComponentProps {\n  fingerprint: Fingerprint | null;\n  handleDateChange: (date: string) => void;\n  date: string;\n}\n\ntype Props = ComponentProps & WithStyles<typeof styles>;\n\nconst HomeComponent: FC<Props> = ({\n  classes,\n  fingerprint,\n  handleDateChange,\n  date\n}) => {\n  const avatarLetter = \"A\";\n  const details = {\n    firstName: \"Alvaro Almonacid Rojo\",\n    lastName: \"Almonacid Rojo\",\n    email: \"alvaro.almonacid.rojo@wanadoo.es\",\n    description: \"Frontend developer\",\n    proyectName: \"Proyecto fin GS\"\n  };\n  const handleClick = (date: Date) =>\n    handleDateChange(moment(date).format(\"YYYY-MM-DD\"));\n  const entry = fingerprint\n    ? moment(fingerprint.first_fingerprint).format(\"HH:mm:ss\")\n    : \"\";\n  const exit = fingerprint\n    ? moment(fingerprint.last_fingerprint).format(\"HH:mm:ss\")\n    : \"\";\n\n  const time2 = !(entry === \"\" && exit === \"\")\n    ? moment.duration(\n        moment(fingerprint!.last_fingerprint).diff(\n          moment(fingerprint!.first_fingerprint)\n        )\n      )\n    : \"\";\n  const time3 = time2 === \"\" ? time2 : `${time2.hours()}:${time2.minutes()}`;\n  return (\n    <Paper className={classes.paper}>\n      <Grid container className={classes.details} alignItems=\"center\">\n        <Grid item xs={12} md={4} lg={2}>\n          <Avatar className={classes.avatar}>{avatarLetter}</Avatar>\n        </Grid>\n        <Grid item xs={12} md={8} lg={10}>\n          <Typography weight=\"bold\" variant=\"h3\">\n            {details.firstName}\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"body1\">\n            {details.email}\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"body1\">\n            {details.description}\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"body1\">\n            {details.proyectName}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container alignItems=\"center\">\n        <Grid item xs={6} lg={11}>\n          <DatePickerComponent click={handleClick} date={new Date(date)} />\n        </Grid>\n        <Grid item xs={6} lg={1}>\n          <Icon type=\"replay\" color=\"secondary\" fontSize=\"large\" />\n        </Grid>\n      </Grid>\n      <Grid spacing={0} container className={classes.hours}>\n        <Grid item xs={12} md={4} lg={4} className={classes.hoursItem}>\n          <Typography weight=\"normal\" variant=\"h2\">\n            <Translate message=\"components.home.entry.label\" />\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"h3\">\n            {entry ? entry : \"--:--\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={4} lg={4} className={classes.hoursItem}>\n          <Typography weight=\"normal\" variant=\"h2\">\n            <Translate message=\"components.home.exit.label\" />\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"h3\">\n            {exit ? exit : \"--:--\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={4} lg={4} className={classes.hoursItem}>\n          <Typography weight=\"normal\" variant=\"h2\">\n            <Translate message=\"components.home.time.label\" />\n          </Typography>\n          <Typography weight=\"lighter\" variant=\"h3\">\n            {time3 ? time3 : \"--:--\"}\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container alignContent=\"center\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Dia</TableCell>\n              <TableCell>Entrada</TableCell>\n              <TableCell>Salida</TableCell>\n              <TableCell>Tiempo</TableCell>\n              <TableCell>Teletrabajo</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mockList.map(({ id, day, entry, exit, time, workFromHome }) => (\n              <TableRow key={id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {day}\n                </TableCell>\n                <TableCell>{entry}</TableCell>\n                <TableCell>{exit}</TableCell>\n                <TableCell>{time}</TableCell>\n                <TableCell>{workFromHome ? \"S\" : \"N\"}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(HomeComponent);\n","import memoizeOne from 'memoize-one';\n\nimport { Dispatcher } from './reducer';\n\nconst actionDispatcher = <\n  Args extends any[],\n  ActionCreator extends (...args: Args) => any\n>(\n  actionCreator: ActionCreator,\n  dispatch: Dispatcher,\n): ((...args: Args) => () => void) =>\n  memoizeOne((...args) => () => {\n    dispatch(actionCreator(...args as Args));\n  });\n\nexport default actionDispatcher;\n","import React, { FC, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  DefaultState as FingerprintDefaultState,\n  getFingerprintDetails\n} from \"../../redux/reducers/fingerprintDetails\";\n\nimport moment from \"moment\";\nimport DataContainer from \"../../components/DataContainer\";\nimport HomeComponent from \"../../components/Home\";\nimport actionDispatcher from \"../../redux/actionDispatcher\";\nimport { Dispatcher } from \"../../redux/reducer\";\nimport { AppState } from \"../../redux/state\";\n\ninterface StateProps {\n  fingerprintDetails: FingerprintDefaultState;\n}\n\ninterface DispatchProps {\n  dispatchGetFingerprintDetails: (\n    userId: string,\n    refresh: boolean\n  ) => () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst mapStateToProps = (state: AppState): StateProps => ({\n  fingerprintDetails: state.fingerprintDetails\n});\n\nconst mapDispatchToProps = (dispatch: Dispatcher): DispatchProps => ({\n  dispatchGetFingerprintDetails: actionDispatcher(\n    getFingerprintDetails,\n    dispatch\n  )\n});\nconst InternalComponent: FC<Props> = ({\n  fingerprintDetails,\n  dispatchGetFingerprintDetails\n}) => {\n  const defaultDate = moment()\n    .format(\"YYYY-MM-DD\")\n    .toString();\n  const [date, setDate] = useState(defaultDate);\n  const handleDateChange = (date: string) => setDate(date);\n  return (\n    <DataContainer\n      data={fingerprintDetails}\n      dataFetcher={dispatchGetFingerprintDetails(\n        `67390d41-a0f6-46e2-b1f7-935f6ca9cc3d?date=${date}`,\n        true\n      )}\n    >\n      {data => (\n        <HomeComponent\n          fingerprint={data}\n          handleDateChange={handleDateChange}\n          date={date}\n        />\n      )}\n    </DataContainer>\n  );\n};\n\nexport const ConnectedHome = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalComponent);\n","import React, { ReactNode } from \"react\";\nimport { Tab } from \"../../redux/reducers/currentPageMeta\";\n\ninterface ComponentProps {\n  pageTitle: string;\n  tab?: Tab;\n  children: ReactNode;\n}\n\ntype Props = ComponentProps;\n\nconst Page = ({ children }: Props) => {\n  return <main>{children}</main>;\n};\n\nexport default Page;\n","import React, { FC } from \"react\";\n\nimport { ConnectedHome } from \"../../containers/Home\";\nimport Page from \"../Page\";\n\nexport const HomePage: FC<{}> = () => (\n  <Page pageTitle=\"Home\" tab=\"Home\">\n    <ConnectedHome />\n  </Page>\n);\n","import { GetUsersResponse } from '../../../../../types/build/users';\n\nimport { ThunkResult } from '../../reducer';\nimport dataStateReducer, {\n  dataFetcher,\n  DataState,\n} from '../../reducers/dataState';\n\nexport const USER_LIST = 'USER_LIST';\n\nexport type USER_LIST = typeof USER_LIST;\n\nexport type UserList = GetUsersResponse;\n\nexport type DefaultState = DataState<UserList['data']>;\n\nexport type GetUserList = ThunkResult<Promise<UserList>>;\n\nconst defaultLink = 'api/users';\n\nexport const getUserList = (forceRefresh: boolean = false): GetUserList => {\n  const url = `${defaultLink}`;\n  return dataFetcher(url, USER_LIST, 'userList', {\n    forceRefresh,\n  });\n};\n\nconst reducer = dataStateReducer<DefaultState, USER_LIST>(USER_LIST);\n\nexport default reducer;\n","import Button, { ButtonProps } from \"@material-ui/core/Button\";\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core/styles\";\nimport React from \"react\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    contained: {\n      boxShadow: \"none\",\n      \"&:focus\": {\n        boxShadow: \"none\"\n      },\n      \"&:disabled\": {\n        backgroundColor: `${theme.colors.disabled}`,\n        color: `${theme.palette.primary.main}`\n      }\n    },\n    outlined: {\n      borderColor: theme.palette.secondary.main,\n      \"&:disabled\": {\n        borderColor: `${theme.colors.disabled}`,\n        color: `${theme.colors.disabled}`\n      }\n    },\n\n    text: {\n      \"&:disabled\": {\n        color: `${theme.colors.disabled}`\n      }\n    },\n\n    root: {\n      '&[data-weight=\"normal\"]': {\n        text: {\n          fontWeight: \"normal\"\n        }\n      },\n      '&[data-weight=\"lighter\"]': {\n        text: {\n          fontWeight: \"lighter\"\n        }\n      },\n      '&[data-weight=\"bold\"]': {\n        fontWeight: \"bold\"\n      }\n    }\n  });\nexport const weightVariants = [\"bold\", \"normal\", \"lighter\"] as const;\ntype WeightTuple = typeof weightVariants;\nexport type WeightVariant = WeightTuple[number]; // union type\n\ntype Props = ButtonProps &\n  WithStyles<typeof styles> & {\n    className?: string;\n    weight?: WeightVariant;\n  };\n\nexport const ButtonComponent = ({ weight = \"normal\", ...props }: Props) => {\n  return <Button {...props} data-weight={weight} />;\n};\n\nexport default withStyles(styles)(ButtonComponent);\n","import _ from 'lodash';\nimport memoize from 'memoize-one';\nimport React, { ChangeEvent, Fragment, ReactElement, useReducer } from 'react';\nimport validate from 'validate.js';\n\n\nexport type actions = 'onChange' | 'invalidForm' | 'pending';\n\nexport type FormInput = boolean | string | undefined | string[];\n\nexport interface FormAction<T> {\n  type: actions;\n  value: FormInput;\n  meta: {\n    name: T;\n  };\n}\n\nexport interface FormProps {\n  validationAlerts: string[];\n}\n\ntype EventType = 'select' | 'text' | 'list';\n\nconst formReducer = <\n  T extends Record<string, FormInput> & FormProps,\n  K extends keyof T\n>(\n  state: T,\n  { value, type, meta: { name } }: FormAction<K>,\n) => {\n  switch (type) {\n    case 'onChange':\n      return {\n        ...state,\n        [name]: value,\n        validationAlerts: [], // reset validation alerts\n      };\n    case 'invalidForm':\n      return {\n        ...state,\n        validationAlerts: value, // reset validation alerts\n      };\n    case 'pending':\n      return {\n        ...state,\n        pending: value,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport function GenericForm<\n  T extends Record<string, FormInput>,\n  K extends keyof T\n>({\n  children,\n  initialState,\n  validations,\n  submitCallback,\n}: {\n  initialState: T;\n  validations: Record<K, {}>;\n  submitCallback: (formData: {}) => () => void;\n  children: (\n    {\n      state,\n      handleChange,\n    }: {\n      state: T & { pending: boolean };\n      handleChange: (\n        eventType?: EventType,\n      ) => (name: K) => (event: ChangeEvent<{}>) => void;\n      handleSubmit: () => 'ok' | 'error';\n    },\n  ) => ReactElement;\n}) {\n  const [state, dispatch] = useReducer(formReducer, initialState);\n\n  const handleSubmit = (): 'ok' | 'error' => {\n    const formValidation = validate(state, validations, { format: 'flat' });\n    if (formValidation) {\n      dispatch({\n        type: 'invalidForm',\n        value: formValidation,\n        meta: {\n          name: '',\n        },\n      });\n      return 'error';\n    } else {\n      submitCallback({\n        ...state,\n        validationAlerts: undefined,\n        pending: undefined,\n      })();\n      dispatch({\n        type: 'pending',\n        value: true,\n        meta: {\n          name: '',\n        },\n      });\n      return 'ok';\n    }\n  };\n\n  const selectType = (event: any, name: K, eventType?: EventType): any => {\n    if (eventType) {\n      switch (eventType) {\n        case 'select':\n          return event.value;\n        case 'text':\n          event.persist();\n          return (event.target as HTMLInputElement).value;\n        case 'list':\n          event.persist();\n          const value = (event.target as HTMLSelectElement).value;\n          return value;\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  const handleChange = (eventType?: EventType) => (name: K) =>\n    memoize((event: any) => {\n      dispatch({\n        type: 'onChange',\n        value: selectType(event, name, eventType),\n        meta: {\n          name,\n        },\n      });\n    });\n\n  return (\n    <Fragment>\n      <Fragment>\n        {!!(state.validationAlerts && state.validationAlerts.length) && (\n          <>{state.validationAlerts.map(\n            (message: string, index: number) => {\n              return (\n                <div key={index}>\n                  <span>{message}</span>\n                </div>\n              );\n            },\n          )}</>\n        )}\n      </Fragment>\n      <Fragment> {children({ state, handleChange, handleSubmit })}</Fragment>\n    </Fragment>\n  );\n}\n","import {\n  Chip,\n  CircularProgress,\n  createStyles,\n  Grid,\n  MenuItem,\n  OutlinedInput,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Theme,\n  WithStyles,\n  withStyles\n} from \"@material-ui/core\";\nimport React, { FC, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Proyect } from \"../../../../types/build/proyects\";\nimport { User } from \"../../../../types/build/users\";\nimport actionDispatcher from \"../../redux/actionDispatcher\";\nimport { Dispatcher } from \"../../redux/reducer\";\nimport {\n  DefaultState as UserListDefaultState,\n  getUserList\n} from \"../../redux/reducers/userList\";\nimport { AppState } from \"../../redux/state\";\nimport Button from \"../Button\";\nimport DataContainer from \"../DataContainer\";\nimport { GenericForm } from \"../Forms\";\nimport Translate from \"../Translation\";\nimport Typography from \"../Typography\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      padding: \"20px\",\n      height: \"100%\",\n      margin: \"20px\"\n    },\n    proyect: {\n      margin: \"20px\"\n    },\n    chips: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    chip: {\n      margin: 2\n    },\n    select: {\n      minWidth: 120,\n      maxWidth: 300\n    }\n  });\n\ninterface ComponentProps {\n  proyects: Proyect[];\n  formCallback: (formData: {}) => () => void;\n}\n\nconst initialState = {\n  name: undefined,\n  description: undefined,\n  user_ids: []\n};\n\ninterface StateProps {\n  userList: UserListDefaultState;\n}\n\ninterface DispatchProps {\n  dispatchGetUserList: (refresh: boolean) => () => void;\n}\n\ntype Props = StateProps &\n  DispatchProps &\n  WithStyles<typeof styles> &\n  ComponentProps;\n\nconst mapStateToProps = (state: AppState): StateProps => ({\n  userList: state.userList\n});\n\nconst mapDispatchToProps = (dispatch: Dispatcher): DispatchProps => ({\n  dispatchGetUserList: actionDispatcher(getUserList, dispatch)\n});\n\nconst ProyectsComponent: FC<Props> = ({\n  classes,\n  proyects,\n  formCallback,\n  userList,\n  dispatchGetUserList\n}) => {\n  const allProyects = proyects.length;\n  const [openForm, setOpenForm] = useState(false);\n  const newProyect = () => setOpenForm(true);\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography component=\"h3\" variant=\"h3\">\n        <Translate message=\"components.proyects.allProyects.title\" />\n      </Typography>\n      <Typography variant=\"caption\" weight=\"lighter\" customColor=\"boulder\">\n        {allProyects}{\" \"}\n        <Translate message=\"components.proyects.allProyects.count\" />\n      </Typography>\n      <Grid className={classes.proyect}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={newProyect}>\n          Nuevo proyecto\n        </Button>\n      </Grid>\n      {openForm && (\n        <Grid>\n          <GenericForm\n            initialState={initialState}\n            validations={{\n              name: {\n                presence: { allowEmpty: false }\n              },\n              description: {\n                presence: { allowEmpty: false }\n              },\n              user_ids: {}\n            }}\n            submitCallback={formCallback}\n          >\n            {({ state, handleSubmit, handleChange }) => {\n              return (\n                <>\n                  <Grid container>\n                    <Grid md={4}>\n                      <OutlinedInput\n                        placeholder=\"Nombre\"\n                        labelWidth={0}\n                        onChange={handleChange(\"text\")(\"name\")}\n                      />\n                    </Grid>\n                    <Grid md={4}>\n                      <OutlinedInput\n                        placeholder=\"Descripción\"\n                        labelWidth={0}\n                        onChange={handleChange(\"text\")(\"description\")}\n                      />\n                    </Grid>\n                    <DataContainer\n                      data={userList}\n                      dataFetcher={dispatchGetUserList(true)}\n                    >\n                      {data => {\n                        const selectValue = (id: string, data: User[]) => {\n                          const user = data.filter(c => c.user_id === id);\n                          return user.length > 0\n                            ? `${user[0].first_name} ${user[0].last_name}`\n                            : \"\";\n                        };\n                        return (\n                          <Select\n                            multiple\n                            className={classes.select}\n                            renderValue={selected => (\n                              <div className={classes.chips}>\n                                {(selected as string[]).map(value => (\n                                  <Chip\n                                    key={value}\n                                    label={selectValue(value, data)}\n                                    className={classes.chip}\n                                  />\n                                ))}\n                              </div>\n                            )}\n                            value={state.user_ids || []}\n                            onChange={handleChange(\"list\")(\"user_ids\")}\n                          >\n                            {data.map((customer, index) => {\n                              return (\n                                <MenuItem\n                                  key={index}\n                                  value={customer.user_id}\n                                >{`${customer.first_name} ${customer.last_name}`}</MenuItem>\n                              );\n                            })}\n                          </Select>\n                        );\n                      }}\n                    </DataContainer>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={handleSubmit}\n                      className={classes.proyect}\n                    >\n                      {state.pending ? (\n                        <CircularProgress size={24} />\n                      ) : (\n                        \"Enviar\"\n                      )}\n                    </Button>\n                  </Grid>\n                </>\n              );\n            }}\n          </GenericForm>\n        </Grid>\n      )}\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Nombre</TableCell>\n            <TableCell numeric>Descripción</TableCell>\n            <TableCell numeric>Creación</TableCell>\n            <TableCell numeric>Empleados</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {proyects.map(\n            ({ proyect_id, name, description, created_at, total_users }) => (\n              <TableRow key={proyect_id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {name}\n                </TableCell>\n                <TableCell numeric>{description}</TableCell>\n                <TableCell numeric>{created_at}</TableCell>\n                <TableCell numeric>{total_users}</TableCell>\n              </TableRow>\n            )\n          )}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ProyectsComponent));\n","import { GetProyectsResponse } from '../../../../../types/build/proyects';\n\nimport { ThunkResult } from '../../reducer';\nimport dataStateReducer, {\n  dataFetcher,\n  DataState,\n} from '../../reducers/dataState';\n\nexport const PROYECT_LIST = 'PROYECT_LIST';\n\nexport type PROYECT_LIST = typeof PROYECT_LIST;\n\nexport type ProyectList = GetProyectsResponse;\n\nexport type DefaultState = DataState<ProyectList['data']>;\n\nexport type GetProyectList = ThunkResult<Promise<ProyectList>>;\n\nconst defaultLink = 'api/proyects';\n\nexport const getProyectList = (forceRefresh: boolean = false): GetProyectList => {\n  const url = `${defaultLink}`;\n  return dataFetcher(url, PROYECT_LIST, 'proyectList', {\n    forceRefresh,\n  });\n};\n\nconst reducer = dataStateReducer<DefaultState, PROYECT_LIST>(PROYECT_LIST);\n\nexport default reducer;\n","import ProyectsComponent from '../../components/Proyects';\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { DefaultState as ProyectListDefaultState, getProyectList } from '../../redux/reducers/proyectList';\nimport { AppState } from '../../redux/state';\nimport { Dispatcher } from '../../redux/reducer';\nimport actionDispatcher from '../../redux/actionDispatcher';\nimport DataContainer from '../../components/DataContainer';\nimport { dataSenderWithCallback } from '../../redux/reducers/dataState';\n\ninterface StateProps {\n  proyectList: ProyectListDefaultState;\n}\n\ninterface DispatchProps {\n  dispatchGetProyectList: (refresh: boolean) => () => void;\n  dispatchSenderAction: (url: string, method: 'POST', callback: Array<() => void>, tag: string, formData: {}) => () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst mapStateToProps = (state: AppState): StateProps => ({\n  proyectList: state.proyectList,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatcher): DispatchProps => ({\n  dispatchGetProyectList: actionDispatcher(getProyectList, dispatch),\n  dispatchSenderAction: actionDispatcher(dataSenderWithCallback, dispatch)\n});\n\nconst InternalComponent = ({\n  dispatchGetProyectList,\n  dispatchSenderAction,\n  proyectList,\n}: Props) => {\n  const formCallBack = (formData: {}) => () => {\n    dispatchSenderAction(\n      '/api/proyects',\n      'POST',\n      [dispatchGetProyectList(true)],\n      '',\n      formData,\n    )();\n  }\n  return <DataContainer\n    data={proyectList}\n    dataFetcher={dispatchGetProyectList(true)}\n  >\n  {data => <ProyectsComponent proyects={data} formCallback={formCallBack} />}\n  </DataContainer>;\n};\n\nexport const ConnectedProyects = connect(mapStateToProps, mapDispatchToProps)(InternalComponent);\n","import React, { FC } from \"react\";\n\nimport { ConnectedProyects } from \"../../containers/Proyects\";\nimport Page from \"../Page\";\n\nexport const ProyectsPage: FC<{}> = () => (\n  <Page pageTitle=\"Proyects\" tab=\"Proyects\">\n    <ConnectedProyects />\n  </Page>\n);\n","import { createStyles, Paper, Theme, withStyles, WithStyles, Table, TableHead, TableRow, TableCell, TableBody, Grid, OutlinedInput, CircularProgress, Select, Chip, MenuItem } from '@material-ui/core';\nimport React, { FC, useState } from 'react';\nimport Typography from '../Typography';\nimport Translate from '../Translation';\nimport Button from '../Button';\nimport DataContainer from '../DataContainer';\nimport { User } from '../../../../types/build/users';\nimport { GenericForm } from '../Forms';\nimport { getProyectList, DefaultState as ProyectListDefaultState } from '../../redux/reducers/proyectList';\nimport { AppState } from '../../redux/state';\nimport { Dispatcher } from '../../redux/reducer';\nimport actionDispatcher from '../../redux/actionDispatcher';\nimport { Proyect } from '../../../../types/build/proyects';\nimport { connect } from 'react-redux';\n\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        paper: {\n            padding: '20px',\n            height: '100%',\n            margin: '20px',\n        },\n        employ: {\n            margin: '20px',\n        },\n        chips: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        chip: {\n            margin: 2,\n        },\n        select: {\n            minWidth: 120,\n            maxWidth: 300,\n        }\n    });\ninterface ComponentProps {\n    users: User[];\n    formCallback: (formData: {}) => () => void;\n}\n\n\ninterface StateProps {\n    proyectList: ProyectListDefaultState;\n}\n\ninterface DispatchProps {\n    dispatchGetProyectList: (refresh: boolean) => () => void;\n}\n\ntype Props = WithStyles<typeof styles> & ComponentProps & StateProps & DispatchProps;\n\nconst mapStateToProps = (state: AppState): StateProps => ({\n    proyectList: state.proyectList,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatcher): DispatchProps => ({\n    dispatchGetProyectList: actionDispatcher(getProyectList, dispatch),\n});\n\nconst initialState = {\n    email: undefined,\n    first_name: undefined,\n    last_name: undefined,\n    proyect_ids: [],\n}\n\nconst UsersComponent: FC<Props> = ({ \n    classes, \n    users, \n    formCallback,\n    proyectList,\n    dispatchGetProyectList,\n}) => {\n    const allEmployees = users.length;\n    const [openForm, setOpenForm] = useState(false);\n    const newEmploye = () => setOpenForm(true);\n    return (\n        <Paper className={classes.paper}>\n            <Typography\n                component=\"h3\"\n                variant=\"h3\"\n            >\n                <Translate message=\"components.employees.allEmployees.title\" />\n            </Typography>\n            <Typography variant=\"caption\" weight=\"lighter\" customColor=\"boulder\">\n                {allEmployees}{' '}\n                <Translate message=\"components.employees.allEmployees.count\" />\n            </Typography>\n            <Grid className={classes.employ}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={newEmploye}>Nuevo empleado</Button>\n            </Grid>\n            {openForm &&\n                <Grid>\n                    <GenericForm initialState={initialState}\n                        validations={{\n                            email: {\n                                presence: { allowEmpty: false },\n                            },\n                            first_name: {\n                                presence: { allowEmpty: false },\n                            },\n                            last_name: {\n                                presence: { allowEmpty: false },\n                            },\n                            proyect_ids: {},\n                        }}\n                        submitCallback={formCallback}>\n                        {({ state, handleSubmit, handleChange }) => {\n                            return <>\n                                <Grid container>\n                                    <Grid md={4}><OutlinedInput placeholder=\"Email\" labelWidth={0} onChange={handleChange('text')('email')} /></Grid>\n                                    <Grid md={4}><OutlinedInput placeholder=\"Nombre\" labelWidth={0} onChange={handleChange('text')('first_name')} /></Grid>\n                                    <Grid md={4}><OutlinedInput placeholder=\"Apellidos\" labelWidth={0} onChange={handleChange('text')('last_name')} /></Grid>\n                                    <DataContainer\n                                        data={proyectList}\n                                        dataFetcher={dispatchGetProyectList(true)}\n                                    >\n                                        {data => {\n                                            const selectValue = (id: string, data: Proyect[]) => {\n                                                const proyect = data.filter(c => c.proyect_id === id);\n                                                return proyect.length > 0 ? `${proyect[0].name}` : '';\n                                            }\n                                            return <Select\n                                                multiple\n                                                className={classes.select}\n                                                renderValue={(selected) => (\n                                                    <div className={classes.chips}>\n                                                        {(selected as string[]).map((value) => (\n                                                            <Chip key={value} label={selectValue(value,data)} className={classes.chip} />\n                                                        ))}\n                                                    </div>\n                                                )}\n                                                value={state.proyect_ids || []}\n                                                onChange={handleChange('list')('proyect_ids')} >\n                                                {data.map((proyect) => {\n                                                    return <MenuItem value={proyect.proyect_id}>{`${proyect.name}`}</MenuItem>\n                                                })}\n                                            </Select>\n                                        }}\n                                    </DataContainer>\n                                    <Button\n                                        variant=\"contained\" color=\"secondary\" onClick={handleSubmit}\n                                        className={classes.employ}\n                                    >\n                                        {state.pending ? (\n                                            <CircularProgress size={24} />\n                                        ) : (\n                                                'Enviar'\n                                            )}\n                                    </Button>\n                                </Grid>\n                            </>\n                        }\n                        }\n                    </GenericForm>\n                </Grid>\n            }\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Email</TableCell>\n                        <TableCell >Nombre</TableCell>\n                        <TableCell >Apellidos</TableCell>\n                        <TableCell >Proyectos</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {users.map(({ user_id, email, first_name, last_name, total_proyects }) => (\n                        <TableRow key={user_id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {email}\n                            </TableCell>\n                            <TableCell >{first_name}</TableCell>\n                            <TableCell >{last_name}</TableCell>\n                            <TableCell >{total_proyects}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UsersComponent));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport UsersComponent from '../../components/Users';\nimport { DefaultState as UserListDefaultState, getUserList } from '../../redux/reducers/userList';\nimport { AppState } from '../../redux/state';\nimport { Dispatcher } from '../../redux/reducer';\nimport actionDispatcher from '../../redux/actionDispatcher';\nimport DataContainer from '../../components/DataContainer';\nimport { dataSenderWithCallback } from '../../redux/reducers/dataState';\n\ninterface StateProps {\n  userList: UserListDefaultState;\n}\n\ninterface DispatchProps {\n  dispatchGetUserList: (refresh: boolean) => () => void;\n  dispatchSenderAction: (url: string, method: 'POST', callback: Array<() => void>, tag: string, formData: {}) => () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst mapStateToProps = (state: AppState): StateProps => ({\n  userList: state.userList,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatcher): DispatchProps => ({\n  dispatchGetUserList: actionDispatcher(getUserList, dispatch),\n  dispatchSenderAction: actionDispatcher(dataSenderWithCallback, dispatch)\n});\n\nconst InternalComponent = ({\n  dispatchGetUserList,\n  dispatchSenderAction,\n  userList,\n}: Props) => {\n  const formCallBack = (formData: {}) => () =>{\n    console.log('da')\n    dispatchSenderAction(\n      '/api/users',\n      'POST',\n      [dispatchGetUserList(true)],\n      '',\n      formData,\n    )();\n  }\n  return <DataContainer\n    data={userList}\n    dataFetcher={dispatchGetUserList(true)}\n  >\n  {data => <UsersComponent users={data} formCallback={formCallBack}/>}\n  </DataContainer>;\n};\n\nexport const ConnectedUsers = connect(mapStateToProps, mapDispatchToProps)(InternalComponent);\n","import React, { FC } from \"react\";\n\nimport { ConnectedUsers } from \"../../containers/Users\";\nimport Page from \"../Page\";\n\nexport const UsersPage: FC<{}> = () => (\n  <Page pageTitle=\"Employees\" tab=\"Employees\">\n    <ConnectedUsers />\n  </Page>\n);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport DashboardLayout from \"./pages/DashboardLayout\";\nimport { HomePage } from \"./pages/HomePage\";\nimport { ProyectsPage } from \"./pages/ProyectsPage\";\nimport { UsersPage } from \"./pages/UsersPage\";\n\nconst AppRoutes = () => {\n  return (\n    <DashboardLayout>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/home\" exact component={HomePage} />\n        <Route path=\"/empleados\" exact component={UsersPage} />\n        <Route path=\"/proyectos\" exact component={ProyectsPage} />\n      </Switch>\n    </DashboardLayout>\n  );\n};\n\nexport default AppRoutes;\n","import { Action } from \"../../reducer\";\n\nexport const defaultState = {};\n\nexport const SET_LOGIN = 'SET_LOGIN';\n\nexport type SET_LOGIN = typeof SET_LOGIN;\n\nexport type SetLogin = Action<SET_LOGIN, Login>;\n\ntype Actions = SetLogin;\n\nexport type Login = {};\n\nexport const setLogin = (\n  payload: Login,\n): SetLogin => ({\n  type: SET_LOGIN,\n  payload,\n});\n\nconst reducer = (\n  state: Login = defaultState,\n  { type, payload }: Actions,\n) => {\n  switch (type) {\n    case SET_LOGIN:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import GoogleLogin, { GoogleLoginResponse, GoogleLoginResponseOffline } from \"react-google-login\";\nimport React, { FC } from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatcher } from \"../../redux/reducer\";\nimport { setLogin, SetLogin } from \"../../redux/reducers/login\";\nimport { bindActionCreators } from \"redux\";\n\ninterface DispatchProps {\n    setLogin: (payload: {}) => SetLogin;\n}\nconst mapDispatchToProps = (dispatch: Dispatcher) => bindActionCreators({setLogin}, dispatch);\nconst Login: FC<{} & DispatchProps > = ({ children, setLogin }) => {\n    const [isSignIn, setSignIn] = useState(false);\n    const isLoginResponse = (response: GoogleLoginResponse | GoogleLoginResponseOffline): response is GoogleLoginResponse => \n    (response as GoogleLoginResponse).googleId !== undefined;\n    const onSuccess = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n\n        console.log('SUCCESS');\n        setSignIn(true);\n        const r = isLoginResponse(response) ? response.profileObj.email : response;\n        console.log('EMAIL', r);\n        setLogin(response);\n    }\n    const onFailure = (error: any) => {\n        console.log('ERROR')\n    }\n    return (<>\n        {isSignIn ? <GoogleLogin\n            clientId=\"185204078816-12higau5sbopv184as7l0mmd1g7qugsr.apps.googleusercontent.com\"//TO BE CREATED\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            isSignedIn={false}\n        /> : <>{children}</>}\n    </>);\n}\n\nexport default connect(null,mapDispatchToProps)(Login)","import { Action } from '../../reducer';\n\nexport type Tab = 'Home' | 'Employees' | 'Proyects' | 'Administration' | 'Holidays';\n\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\n\nexport type SET_CURRENT_PAGE = typeof SET_CURRENT_PAGE;\n\nexport type SetCurrentPageMeta = Action<SET_CURRENT_PAGE, CurrentPageMeta>;\n\ntype Actions = SetCurrentPageMeta;\n\nexport interface CurrentPageMeta {\n  tab?: Tab;\n  appBarTitle?: string;\n}\n\nexport const defaultState = {};\n\nexport const setCurrentPageMeta = (\n  payload: CurrentPageMeta,\n): SetCurrentPageMeta => ({\n  type: SET_CURRENT_PAGE,\n  payload,\n});\n\nconst reducer = (\n  state: CurrentPageMeta = defaultState,\n  { type, payload }: Actions,\n) => {\n  switch (type) {\n    case SET_CURRENT_PAGE:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { AnyAction, Reducer } from 'redux';\n\nimport { Action } from '../../reducer';\n\nexport const RESET_PAGE = 'RESET_PAGE';\n\nexport type RESET_PAGE = typeof RESET_PAGE;\n\nexport type ResetPageData = Action<RESET_PAGE, {}>;\n\nexport const resetPageData = (): ResetPageData => ({\n  type: RESET_PAGE,\n});\n\nexport function pageReducer<T extends Reducer>(\n  reducer: T,\n  initialState: ReturnType<typeof reducer>,\n) {\n  return ((state: ReturnType<typeof reducer>, action: AnyAction) => {\n    if (action.type === RESET_PAGE) {\n      return initialState;\n    }\n    return reducer(state, action);\n  }) as Reducer<ReturnType<typeof reducer>, AnyAction>;\n}\n\nexport default pageReducer;\n","import { AnyAction, combineReducers, Reducer } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nimport currentPageMeta from './reducers/currentPageMeta';\nimport login from './reducers/login';\nimport { AppState } from './state';\nimport page from './reducers/page';\nimport userList from './reducers/userList';\nimport proyectList from './reducers/proyectList';\nimport fingerprintDetails from './reducers/fingerprintDetails';\nimport { defaultState as dataDefaultState } from './reducers/dataState';\n\nexport interface Action<Type, Payload = {}> {\n  type: Type;\n  payload?: Payload;\n}\n\nexport type ThunkResult<R> = ThunkAction<R, AppState, void, AnyAction>;\nexport type Dispatcher = ThunkDispatch<AppState, undefined, AnyAction>;\n\nconst appReducer: Reducer = combineReducers({\n  currentPageMeta,\n  login,\n  userList: page(userList, dataDefaultState),\n  proyectList: page(proyectList, dataDefaultState),\n  fingerprintDetails: page(fingerprintDetails, dataDefaultState),\n});\n\nexport default appReducer;\n","import {\n    CurrentPageMeta,\n    defaultState as currentPageDefaultState,\n} from './reducers/currentPageMeta';\nimport { Login, defaultState as loginDefaultState } from './reducers/login';\nimport { DefaultState as UserListDefaultState } from './reducers/userList';\nimport { DefaultState as ProyectListDefaultState } from './reducers/proyectList';\nimport { defaultState as dataDefaultState } from './reducers/dataState';\nimport { DefaultState as FingerprintDefaultState } from './reducers/fingerprintDetails';\n\nexport interface AppState {\n  currentPageMeta: CurrentPageMeta;\n  login: Login;\n  userList: UserListDefaultState;\n  proyectList: ProyectListDefaultState;\n  fingerprintDetails: FingerprintDefaultState;\n}\n\nexport const defaultState: AppState = {\n  currentPageMeta: currentPageDefaultState,\n  login: loginDefaultState,\n  userList: dataDefaultState,\n  proyectList: dataDefaultState,\n  fingerprintDetails: dataDefaultState,\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport promise from 'redux-promise-middleware';\nimport thunk from 'redux-thunk';\n\nimport reducer from './reducer';\nimport { AppState, defaultState } from './state';\n\nconst isDev: boolean = process.env.NODE_ENV === 'development';\n\nexport const configureStore = (initialState: AppState | any = defaultState) => {\n  return createStore(\n    reducer,\n    initialState,\n    compose(\n      applyMiddleware(promise, thunk),\n      (isDev &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\n        (window as any).__REDUX_DEVTOOLS_EXTENSION__()) ||\n        compose,\n    ),\n  );\n};\n\nexport default configureStore();\n","import React, { Component } from \"react\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport AppRoutes from \"./AppRoutes\";\nimport Login from \"./components/Login\";\nimport ThemeProvider from \"./components/ThemeProvider\";\nimport { LanguageContext } from \"./components/Translation/context\";\nimport store from \"./redux/configureStore\";\n\nclass App extends Component {\n  public render() {\n    return (\n      <ThemeProvider>\n        <ReduxProvider store={store}>\n          <Login>\n            <LanguageContext.Provider value=\"es\">\n              <Router>\n                <AppRoutes />\n              </Router>\n            </LanguageContext.Provider>\n          </Login>\n        </ReduxProvider>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}